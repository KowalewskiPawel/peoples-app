/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTMock, NFTMockInterface } from "../NFTMock";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x600160065560056080818152642a37b5b2b760d91b60a0908152610100604052600360c090815262544f4b60e81b60e052919262000040916000916200005f565b508051620000569060019060208401906200005f565b50505062000142565b8280546200006d9062000105565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b600181811c908216806200011a57607f821691505b602082108114156200013c57634e487b7160e01b600052602260045260246000fd5b50919050565b6114e280620001526000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063b88d4fde11610059578063b88d4fde14610269578063c87b56dd14610289578063d082e381146102a9578063e985e9c5146102bf57600080fd5b80636352211e146101e657806370a082311461020657806395d89b4114610234578063a22cb4651461024957600080fd5b8063095ea7b3116100c6578063095ea7b31461017c5780631249c58b1461019e57806323b872dd146101a657806342842e0e146101c657600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d610108366004610ff2565b610308565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061013761035a565b6040516101199190611067565b34801561015057600080fd5b5061016461015f36600461107a565b6103ec565b6040516001600160a01b039091168152602001610119565b34801561018857600080fd5b5061019c6101973660046110af565b610486565b005b61019c61059c565b3480156101b257600080fd5b5061019c6101c13660046110d9565b6105bf565b3480156101d257600080fd5b5061019c6101e13660046110d9565b6105f0565b3480156101f257600080fd5b5061016461020136600461107a565b61060b565b34801561021257600080fd5b50610226610221366004611115565b610682565b604051908152602001610119565b34801561024057600080fd5b50610137610709565b34801561025557600080fd5b5061019c610264366004611130565b610718565b34801561027557600080fd5b5061019c610284366004611182565b610727565b34801561029557600080fd5b506101376102a436600461107a565b61075f565b3480156102b557600080fd5b5061022660065481565b3480156102cb57600080fd5b5061010d6102da36600461125e565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061033957506001600160e01b03198216635b5e139f60e01b145b8061035457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461036990611291565b80601f016020809104026020016040519081016040528092919081815260200182805461039590611291565b80156103e25780601f106103b7576101008083540402835291602001916103e2565b820191906000526020600020905b8154815290600101906020018083116103c557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661046a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006104918261060b565b9050806001600160a01b0316836001600160a01b031614156104ff5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610461565b336001600160a01b038216148061051b575061051b81336102da565b61058d5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610461565b6105978383610847565b505050565b6105a8336006546108b5565b600680549060006105b8836112e2565b9190505550565b6105c933826108cf565b6105e55760405162461bcd60e51b8152600401610461906112fd565b6105978383836109c6565b61059783838360405180602001604052806000815250610727565b6000818152600260205260408120546001600160a01b0316806103545760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610461565b60006001600160a01b0382166106ed5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610461565b506001600160a01b031660009081526003602052604090205490565b60606001805461036990611291565b610723338383610b66565b5050565b61073133836108cf565b61074d5760405162461bcd60e51b8152600401610461906112fd565b61075984848484610c35565b50505050565b6000818152600260205260409020546060906001600160a01b03166107de5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610461565b60006107f560408051602081019091526000815290565b905060008151116108155760405180602001604052806000815250610840565b8061081f84610c68565b60405160200161083092919061134e565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061087c8261060b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b610723828260405180602001604052806000815250610d66565b6000818152600260205260408120546001600160a01b03166109485760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610461565b60006109538361060b565b9050806001600160a01b0316846001600160a01b0316148061098e5750836001600160a01b0316610983846103ec565b6001600160a01b0316145b806109be57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166109d98261060b565b6001600160a01b031614610a415760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610461565b6001600160a01b038216610aa35760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610461565b610aae600082610847565b6001600160a01b0383166000908152600360205260408120805460019290610ad790849061137d565b90915550506001600160a01b0382166000908152600360205260408120805460019290610b05908490611394565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610bc85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610461565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610c408484846109c6565b610c4c84848484610d99565b6107595760405162461bcd60e51b8152600401610461906113ac565b606081610c8c5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610cb65780610ca0816112e2565b9150610caf9050600a83611414565b9150610c90565b60008167ffffffffffffffff811115610cd157610cd161116c565b6040519080825280601f01601f191660200182016040528015610cfb576020820181803683370190505b5090505b84156109be57610d1060018361137d565b9150610d1d600a86611428565b610d28906030611394565b60f81b818381518110610d3d57610d3d61143c565b60200101906001600160f81b031916908160001a905350610d5f600a86611414565b9450610cff565b610d708383610e97565b610d7d6000848484610d99565b6105975760405162461bcd60e51b8152600401610461906113ac565b60006001600160a01b0384163b15610e8c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610ddd903390899088908890600401611452565b6020604051808303816000875af1925050508015610e18575060408051601f3d908101601f19168201909252610e159181019061148f565b60015b610e72573d808015610e46576040519150601f19603f3d011682016040523d82523d6000602084013e610e4b565b606091505b508051610e6a5760405162461bcd60e51b8152600401610461906113ac565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506109be565b506001949350505050565b6001600160a01b038216610eed5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610461565b6000818152600260205260409020546001600160a01b031615610f525760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610461565b6001600160a01b0382166000908152600360205260408120805460019290610f7b908490611394565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b031981168114610fef57600080fd5b50565b60006020828403121561100457600080fd5b813561084081610fd9565b60005b8381101561102a578181015183820152602001611012565b838111156107595750506000910152565b6000815180845261105381602086016020860161100f565b601f01601f19169290920160200192915050565b602081526000610840602083018461103b565b60006020828403121561108c57600080fd5b5035919050565b80356001600160a01b03811681146110aa57600080fd5b919050565b600080604083850312156110c257600080fd5b6110cb83611093565b946020939093013593505050565b6000806000606084860312156110ee57600080fd5b6110f784611093565b925061110560208501611093565b9150604084013590509250925092565b60006020828403121561112757600080fd5b61084082611093565b6000806040838503121561114357600080fd5b61114c83611093565b91506020830135801515811461116157600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561119857600080fd5b6111a185611093565b93506111af60208601611093565b925060408501359150606085013567ffffffffffffffff808211156111d357600080fd5b818701915087601f8301126111e757600080fd5b8135818111156111f9576111f961116c565b604051601f8201601f19908116603f011681019083821181831017156112215761122161116c565b816040528281528a602084870101111561123a57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561127157600080fd5b61127a83611093565b915061128860208401611093565b90509250929050565b600181811c908216806112a557607f821691505b602082108114156112c657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60006000198214156112f6576112f66112cc565b5060010190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161136081846020880161100f565b83519083019061137481836020880161100f565b01949350505050565b60008282101561138f5761138f6112cc565b500390565b600082198211156113a7576113a76112cc565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601260045260246000fd5b600082611423576114236113fe565b500490565b600082611437576114376113fe565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906114859083018461103b565b9695505050505050565b6000602082840312156114a157600080fd5b815161084081610fd956fea2646970667358221220e1b8bfaa2cc0349261e0833e4a76bcaa7b2fa78bf349d2fb63835f39cb0cb3a764736f6c634300080a0033";

type NFTMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTMock__factory extends ContractFactory {
  constructor(...args: NFTMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<NFTMock> {
    return super.deploy(overrides || {}) as Promise<NFTMock>;
  }
  getDeployTransaction(
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMock {
    return super.attach(address) as NFTMock;
  }
  connect(signer: Signer): NFTMock__factory {
    return super.connect(signer) as NFTMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTMockInterface {
    return new utils.Interface(_abi) as NFTMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMock {
    return new Contract(address, _abi, signerOrProvider) as NFTMock;
  }
}
